@model HobbyTracker.Models.Activity
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Create";
}

<head>
    <link href="~/Content/bootstrap.css" rel="stylesheet">
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" type="text/css" href="~/Content/styles.css" />
    <title>Create</title>
</head>
<body>
    <div class=" panel panel-sucess">
        <div class="panel-heading text-center"><h2>Create</h2></div>
        <p>Host a new activity for people with like-minded interests to gather.</p>
        <div class="panel-bady">


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ActName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ActName, new { htmlAttributes = new { @class = "form-control" } })
                            <p class="help-block">eg: Music Party, Book exchange...</p>
                            @Html.ValidationMessageFor(model => model.ActName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                   @*  Dont need this email field any more, An email field has been added to the activity model that pulls the 
                       current user email automatically. So the user doesn't need to add it in any longer
    
                       <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                             @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                *@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            <p class="help-block">xxx-xxx-xxxx</p>
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*  dont give the option to edit user name. Pulled directly from the controller as the person who is logged in.
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new {@class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger"})
                        </div>
                    </div>

                        *@

                    <div class="form-group">
                        @Html.LabelFor(model => model.WillAttend, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.WillAttend)
                                @Html.ValidationMessageFor(model => model.WillAttend, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CommunityID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CommunityID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CommunityID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</body>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
